LabanLite ASCII Notation Specification (v0.1)
-----------------------------------------------------------------------------
Purpose

    LabanLite ASCII is a compact, ASCII-safe format inspired by Labanotation. It represents movement in a shorthand, linear, readable format.
-----------------------------------------------------------------------------
Goal

    Enable choreography, motion analysis, and training using short, memory-friendly tokens.
    Allow precision AND creativity with the notation system itself.

-----------------------------------------------------------------------------
Token Format

    Each token is a series of characters that describe one unit of movement.
    They are always constructed in the same order:

    BODYPART DURATION DIRECTION FLOW SPACE LEVEL TIME WEIGHT SPECIAL

    Example:
    lA3FR52M17twist


-----------------------------------------------------------------------------
Field Breakdown

1. BodyPart (1-2 letters)
Format: {side}{part}
Common codes:
    • lA = Left Arm
    • rA = Right Arm
    • lL = Left Leg
    • rF = Right Foot
    • lH = Left Hand
    • H = Head
    • C = Chest
    • T = Torso
    • P = Pelvis

2. Duration (digits)
Movement duration in counts (default). May use other units as specified by the setter string.

3. Direction (1–3 letters)
    • F = Forward
    • B = Backward
    • L = Left
    • R = Right
    • U = Up
    • D = Down
    • I = Inwards
Combinations: FL, FR, BL, DBR, FUR, BU, etc.

4. Flow (1 digit)
Effort quality (0–9)
E.g., Free ↔ Bound

5. Space (1 digit)
Spatial focus (0–9)
E.g., Indirect ↔ Direct

6. Level (1 letter)
    • H = High
    • M = Middle
    • L = Low

7. Time (1 digit)
Timing quality (0–9)
E.g., Sustained ↔ Sudden

8. Weight (1 digit)
Physical effort (0–9)
E.g., Light ↔ Heavy

9. Special (optional)
Word / phrase tag for gesture type, shape, or intent, dynamic quality or anything else you want to encode.
Multiple words should be separated by "_".
Examples: push, twist, fiercely, immediate, shiny, evil_grin
-----------------------------------------------------------------------------
Token Examples

    1. lA3FR52M17twist
→ Left Arm, 3 counts, Forward-Right, Flow 5, Space 2, Middle, Time 1, Weight 7, Special: twist

    2. rT1BL43L89
→ Right Torso, 1 count, Back-Left, Flow 4, Space 3, Low, Time 8, Weight 9

    3. H2FU87H95hold_tightly
→ Head, 2 counts, Forward-Up, Flow 8, Space 7, High, Time 9, Weight 5, Special: hold tightly
-----------------------------------------------------------------------------
Special Characters

    • , = tokens begin simultaneously
    • . = 1 unit of time passes
    • : = 1/2 unit of time
    • :: = 1/4, ::: = 1/8 etc     <---------- attempt to create a minim-crotchett-quaver type system, non functional
    • ! = end of part
    • !! = end of choreography
    • x[] = repeat token(s) x times (return directly to token beginning position for repeat)
    • xr[] = repeat token(s) x times (retrograde through token to beginning position for repeat)
    • x() = dancer x performs these tokens.
    • _ = word separator
    • %y{} = Define motif/phrase, labelled as y, can be character, word, phrase
    • {y} = repeat motif y
    • x{y} = repeat motif y, x times
    • r{y} = repeat motif y in retrograde
    • i{y} = repeat motif y inverted
    • * = denotes moments of unison between dancers, symbolic and mostly for cohesion and co-ordination
    • ** = duet *** = trio etc.
    •

    replace x with any number
    replace y with any character, word or phrase

-----------------------------------------------------------------------------
Movement Order + Timing

Simultaneous Actions:
lA3F52M17push,rA3F52M17push
→ Both arms push forward together for 3 counts.

Staggered Start:
lA3F52M17push.rA3F52M17push
→ Right arm starts one count after left.

Delayed Sequence:
lA3F52M17push...rA3F52M17push
→ Right arm starts three counts after left.

Partial Count Timing:
lA1F52M17push:rA1F52M17push
→ Right arm begins halfway through left's 1-count punch.

Note on sequencing:
time within brackets () is linear, bracketted parts in sequence happen simultaneously
A(...)B(...)C(...)
→ Dancers A, B, and C doing nothing for 3 counts TOTAL

******lA1F52M17push::rA1F52M17push
→ Right arm begins a quarter-count into left's movement.****** NON-FUNCTIONAL

Note: Full stops (.) come AFTER the token on their count.
-----------------------------------------------------------------------------
Setter Strings

The first line of choreography should begin with a setter string followed by a semi-colon (;). This sets global parameters.
Examples:
    • 4T135GLAMOROUS; → 4 dancers, tempo 135 BPM, glitter-covered
    • 1S1WET; → Solo, 1 second time-unit duration, underwater
Optional Starting Positions:
lHBR,rAR,PU → Left Hand Back-Right, Right Arm Right, Pelvis Up
-----------------------------------------------------------------------------
Duet Example

2T90FRANTIC_MINIMALIST_RED1(lhU,TRB,PD)2(HD,PU);
1(
2[T4FL56M86coil],P1I33L21tuck...rH3U12H07raise
3[lH2D44L33].C3F25M41bend_stiffly...:C4B83M52,
rF2FR42L27step,lH3U11H43reach:...rH1D35M06drop,
P3BU54M19tilt...2[T2FU23H20extend]..
lL4BR71L38kick,rL2BL41L14kick_calm....
lA1L24M07swipe.rA1R21M06swipe,H2U63H18look!
)
2(
..........:10[P1B33L21tuck]..:.%1{4r[rH1U12H07]:lH2D44L33].}{1}C3F25M41bend:..i{1}
rA1R21M06swipe,H2U63H18look!
)!!


-----------------------------------------------------------------------------
Token Code Order Reasoning

    • Starts with bodypart and timing information — most useful when scanning through choreography
    • Alternating letters and numbers aid readability
    • 0–9 values (efforts) are ordered alphabetically and broken into pairs for memorability: Flow-SPACE level TIME-Weight
-----------------------------------------------------------------------------
Use Cases

    • Choreographic sketching
    • Digital motion capture markup
    • Dataset compression
    • Creative generative dance systems
    • Labanotation Archivism
-----------------------------------------------------------------------------
Future Features?

    • Expanded body taxonomy, potentially medical-grade
    • Symmetry/reflection notation, other choreographic modifiers
    • Floor plans or step notation, perhaps using a grid navigation system to represent the dancer's pathway
        This could even be expanded to include information about where each token group happens (|)
        Example: UR|URRL||LR||UUURD|D|
    • Additional structural and ordering features
    • Enhanced timing system
-----------------------------------------------------------------------------
Author
Developed by Jake Bradnock, 2025.
LabanLite is freely shareable and extensible.
­
